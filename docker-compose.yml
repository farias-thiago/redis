version: '3.8'

services:
  # Redis com RedisGears (do submodule redis-to-postgres)
  redis-gears:
    image: redislabs/redisgears:latest
    container_name: redis-gears
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis-to-postgres/registra-gear-interno.py:/tmp/registra-gear-interno.py
    networks:
      - quiz_network

  # PostgreSQL Data Warehouse (do submodule redis-to-postgres)
  postgres-dw:
    image: postgres:16
    container_name: postgres-dw
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: senhaForte2025
      POSTGRES_DB: dw
    ports:
      - "5432:5432"
    volumes:
      - postgres_dw_data:/var/lib/postgresql/data
    networks:
      - quiz_network

  # PostgreSQL Metabase (do submodule lab-metabase)  
  db-metabase:
    image: postgres:latest
    environment:
      POSTGRES_USER: metabase_user
      POSTGRES_PASSWORD: metabase_pass
      POSTGRES_DB: metabase
    volumes:
      - metabase_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - quiz_network

  # Data Warehouse PostgreSQL (do submodule lab-metabase)
  db-dw:
    image: postgres:latest
    environment:
      POSTGRES_USER: dw_user
      POSTGRES_PASSWORD: dw_pass
      POSTGRES_DB: dw_analytics
    volumes:
      - dw_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    networks:
      - quiz_network

  # Metabase (do submodule lab-metabase)
  metabase:
    image: metabase/metabase:v0.42.1
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: metabase
      MB_DB_PORT: 5432
      MB_DB_USER: metabase_user
      MB_DB_PASS: metabase_pass
      MB_DB_HOST: db-metabase
    ports:
      - "3000:3000"
    depends_on:
      - db-metabase
      - db-dw
    networks:
      - quiz_network

  # API Quiz (do submodule apiQuestionRedis)
  api-quiz:
    build:
      context: ./apiQuestionRedis
      dockerfile: Dockerfile
    container_name: api-quiz
    ports:
      - "8000:8000"
    environment:
      - REDIS_HOST=redis-gears
    depends_on:
      - redis-gears
    networks:
      - quiz_network

  # Script de ingest√£o (do submodule redis-to-postgres)
  ingestao-redis:
    build:
      context: ./redis-to-postgres
      dockerfile: Dockerfile
    container_name: ingestao-redis
    depends_on:
      - redis-gears
      - postgres-dw
    environment:
      - REDIS_HOST=redis-gears
      - POSTGRES_HOST=postgres-dw
    networks:
      - quiz_network
    restart: unless-stopped

volumes:
  redis_data:
  postgres_dw_data:
  metabase_db_data:
  dw_data:

networks:
  quiz_network:
    driver: bridge